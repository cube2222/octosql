// Code generated by 'yaegi extract github.com/valyala/fastjson'. DO NOT EDIT.

package codegen

import (
	"github.com/valyala/fastjson"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/valyala/fastjson/fastjson"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Exists":         reflect.ValueOf(fastjson.Exists),
		"GetBool":        reflect.ValueOf(fastjson.GetBool),
		"GetBytes":       reflect.ValueOf(fastjson.GetBytes),
		"GetFloat64":     reflect.ValueOf(fastjson.GetFloat64),
		"GetInt":         reflect.ValueOf(fastjson.GetInt),
		"GetString":      reflect.ValueOf(fastjson.GetString),
		"MaxDepth":       reflect.ValueOf(constant.MakeFromLiteral("300", token.INT, 0)),
		"MustParse":      reflect.ValueOf(fastjson.MustParse),
		"MustParseBytes": reflect.ValueOf(fastjson.MustParseBytes),
		"Parse":          reflect.ValueOf(fastjson.Parse),
		"ParseBytes":     reflect.ValueOf(fastjson.ParseBytes),
		"TypeArray":      reflect.ValueOf(fastjson.TypeArray),
		"TypeFalse":      reflect.ValueOf(fastjson.TypeFalse),
		"TypeNull":       reflect.ValueOf(fastjson.TypeNull),
		"TypeNumber":     reflect.ValueOf(fastjson.TypeNumber),
		"TypeObject":     reflect.ValueOf(fastjson.TypeObject),
		"TypeString":     reflect.ValueOf(fastjson.TypeString),
		"TypeTrue":       reflect.ValueOf(fastjson.TypeTrue),
		"Validate":       reflect.ValueOf(fastjson.Validate),
		"ValidateBytes":  reflect.ValueOf(fastjson.ValidateBytes),

		// type definitions
		"Arena":      reflect.ValueOf((*fastjson.Arena)(nil)),
		"ArenaPool":  reflect.ValueOf((*fastjson.ArenaPool)(nil)),
		"Object":     reflect.ValueOf((*fastjson.Object)(nil)),
		"Parser":     reflect.ValueOf((*fastjson.Parser)(nil)),
		"ParserPool": reflect.ValueOf((*fastjson.ParserPool)(nil)),
		"Scanner":    reflect.ValueOf((*fastjson.Scanner)(nil)),
		"Type":       reflect.ValueOf((*fastjson.Type)(nil)),
		"Value":      reflect.ValueOf((*fastjson.Value)(nil)),
	}
}
